image: docker-public.packages.atlassian.com/atlassian/docker-release-maker:latest

pipelines:
  custom:
    new-releases:
      - step:
          name: Crowd JDK 11
          services:
            - docker
          script:
            - git submodule update --init --recursive
            - echo ${DOCKER_BOT_PASSWORD} | docker login ${DOCKER_REGISTRY} --username ${DOCKER_BOT_USERNAME} --password-stdin
            - >
              python /usr/src/app/make-releases.py \
                --create --create-eap \
                --start-version=4.1 \
                --end-version=6 \
                --dockerfile-buildargs='BASE_IMAGE=adoptopenjdk/openjdk11' \
                --dockerfile-version-arg='CROWD_VERSION' \
                --mac-product-key='crowd' \
                --tag-suffixes='jdk11,ubuntu-jdk-11' \
                --default-release \
                --docker-repos='atlassian/crowd' \
                --concurrent-builds='4' \
                --push

    jdk11-custom-release:
      - variables:
          - name: CROWD_VERSION
          - name: DOCKER_TAG
      - step:
          services:
            - docker
          script:
            - git submodule update --init --recursive
            - echo ${DOCKER_BOT_PASSWORD} | docker login ${DOCKER_REGISTRY} --username ${DOCKER_BOT_USERNAME} --password-stdin
            - >
              docker build -t atlassian/crowd:${DOCKER_TAG}
              --build-arg BASE_IMAGE=adoptopenjdk/openjdk11
              --build-arg CROWD_VERSION=${CROWD_VERSION} .
            - docker push atlassian/crowd:${DOCKER_TAG}

  branches:
    master:
      - step:
          name: Crowd JDK 11
          services:
            - docker
          script:
            - git submodule update --init --recursive
            - echo ${DOCKER_BOT_PASSWORD} | docker login ${DOCKER_REGISTRY} --username ${DOCKER_BOT_USERNAME} --password-stdin
            - >
              python /usr/src/app/make-releases.py \
                --update \
                --start-version=4.1 \
                --end-version=6 \
                --dockerfile-buildargs='BASE_IMAGE=adoptopenjdk/openjdk11' \
                --dockerfile-version-arg='CROWD_VERSION' \
                --mac-product-key='crowd' \
                --tag-suffixes='jdk11,ubuntu-jdk-11' \
                --default-release \
                --docker-repos='atlassian/crowd' \
                --concurrent-builds='4' \
                --push

    '**':
      - step:
          image: python:3.7-alpine3.9
          services:
            - docker
          script:
            - apk add --no-cache git
            - git submodule update --init --recursive
            - pip install -q -r shared-components/tests/requirements.txt
            - export PYTHONPATH=./shared-components/tests:$PYTHONPATH
            - export MAC_PRODUCT_KEY='crowd'
            - export DOCKERFILE='Dockerfile'
            - export DOCKERFILE_VERSION_ARG='CROWD_VERSION'
            - py.test tests/
            - py.test shared-components/tests/
definitions:
  services:
    docker:
      memory: 2048
